"""Initial migration

Revision ID: e000a7fc4821
Revises: 
Create Date: 2025-03-11 16:29:36.720431

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
import sqlmodel


# revision identifiers, used by Alembic.
revision: str = 'e000a7fc4821'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('username', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('password_hash', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('last_login', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_user_username'), 'user', ['username'], unique=True)
    op.create_index(op.f('ix_user_uuid'), 'user', ['uuid'], unique=False)
    op.create_table('compound',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('user_id', sa.Uuid(), nullable=False),
    sa.Column('chemical_structure', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['user.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_compound_user_id'), 'compound', ['user_id'], unique=False)
    op.create_index(op.f('ix_compound_uuid'), 'compound', ['uuid'], unique=False)
    op.create_table('report',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('compound_id', sa.Uuid(), nullable=False),
    sa.Column('content', sa.LargeBinary(), nullable=False),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_report_compound_id'), 'report', ['compound_id'], unique=False)
    op.create_index(op.f('ix_report_uuid'), 'report', ['uuid'], unique=False)
    op.create_table('repurposingsuggestion',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('compound_id', sa.Uuid(), nullable=False),
    sa.Column('therapeutic_area', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.Column('suggestion_details', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_repurposingsuggestion_compound_id'), 'repurposingsuggestion', ['compound_id'], unique=False)
    op.create_index(op.f('ix_repurposingsuggestion_uuid'), 'repurposingsuggestion', ['uuid'], unique=False)
    op.create_table('simulation',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('compound_id', sa.Uuid(), nullable=False),
    sa.Column('simulation_result', sa.JSON(), nullable=False),
    sa.Column('status', sqlmodel.sql.sqltypes.AutoString(), nullable=False),
    sa.ForeignKeyConstraint(['compound_id'], ['compound.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_simulation_compound_id'), 'simulation', ['compound_id'], unique=False)
    op.create_index(op.f('ix_simulation_uuid'), 'simulation', ['uuid'], unique=False)
    op.create_table('bindingaffinity',
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.Column('uuid', sa.Uuid(), nullable=False),
    sa.Column('simulation_id', sa.Uuid(), nullable=False),
    sa.Column('before_affinity', sa.Float(), nullable=False),
    sa.Column('after_affinity', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['simulation_id'], ['simulation.uuid'], ),
    sa.PrimaryKeyConstraint('uuid')
    )
    op.create_index(op.f('ix_bindingaffinity_simulation_id'), 'bindingaffinity', ['simulation_id'], unique=False)
    op.create_index(op.f('ix_bindingaffinity_uuid'), 'bindingaffinity', ['uuid'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_bindingaffinity_uuid'), table_name='bindingaffinity')
    op.drop_index(op.f('ix_bindingaffinity_simulation_id'), table_name='bindingaffinity')
    op.drop_table('bindingaffinity')
    op.drop_index(op.f('ix_simulation_uuid'), table_name='simulation')
    op.drop_index(op.f('ix_simulation_compound_id'), table_name='simulation')
    op.drop_table('simulation')
    op.drop_index(op.f('ix_repurposingsuggestion_uuid'), table_name='repurposingsuggestion')
    op.drop_index(op.f('ix_repurposingsuggestion_compound_id'), table_name='repurposingsuggestion')
    op.drop_table('repurposingsuggestion')
    op.drop_index(op.f('ix_report_uuid'), table_name='report')
    op.drop_index(op.f('ix_report_compound_id'), table_name='report')
    op.drop_table('report')
    op.drop_index(op.f('ix_compound_uuid'), table_name='compound')
    op.drop_index(op.f('ix_compound_user_id'), table_name='compound')
    op.drop_table('compound')
    op.drop_index(op.f('ix_user_uuid'), table_name='user')
    op.drop_index(op.f('ix_user_username'), table_name='user')
    op.drop_table('user')
    # ### end Alembic commands ###
