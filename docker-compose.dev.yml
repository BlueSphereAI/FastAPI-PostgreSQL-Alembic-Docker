services:
  "${idea_id}_backend":
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: "${idea_id}_backend"
    restart: always
    volumes:
      - "${idea_id}_backend_static:/app/static"
    environment:
      - PG_DATABASE_URL=postgresql+asyncpg://fastapi:fastapi@${idea_id}_db:5432/postgres
      - ENVIRONMENT=development
    entrypoint: ["/app/scripts/start-backend.dev.sh"]
    depends_on:
      "${idea_id}_db":
        condition: service_healthy
        
  "${idea_id}_frontend":
    build: 
      context: ./frontend
      dockerfile: Dockerfile
      args:
        - VITE_BACKEND_URL=https://${idea_id}-v1.deepsphere.one
    container_name: "${idea_id}_frontend"
    restart: always
    depends_on:
      - "${idea_id}_backend"
      - "${idea_id}_db"

  "${idea_id}_db":
    container_name: "${idea_id}_db"
    image: postgres:16-alpine
    volumes:
      - "${idea_id}_db:/var/lib/postgresql/data"
    environment:
      - POSTGRES_USER=fastapi
      - POSTGRES_PASSWORD=fastapi
    healthcheck:
      test:
        [
            "CMD-SHELL", "pg_isready -U postgres"
        ]
      interval: 5s
      timeout: 5s
      retries: 5

  "${idea_id}_nginx":
    container_name: "${idea_id}_nginx"
    restart: always
    build:
      context: ./nginx
      dockerfile: Dockerfile
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
    ports:
      - "${idea_id}:${idea_id}"
    depends_on:
      - "${idea_id}_backend"
      - "${idea_id}_frontend"
      - "${idea_id}_db"

volumes:
  "${idea_id}_db": {}
  "${idea_id}_backend_static": {}